{"remainingRequest":"/Users/luciekraemer/bakasabl/vue-mastery/touring-vue-router/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/luciekraemer/bakasabl/vue-mastery/touring-vue-router/src/views/EventList.vue?vue&type=style&index=0&id=2ad5958e&scoped=true&lang=css","dependencies":[{"path":"/Users/luciekraemer/bakasabl/vue-mastery/touring-vue-router/src/views/EventList.vue","mtime":1631210658913},{"path":"/Users/luciekraemer/bakasabl/vue-mastery/touring-vue-router/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luciekraemer/bakasabl/vue-mastery/touring-vue-router/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/luciekraemer/bakasabl/vue-mastery/touring-vue-router/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/luciekraemer/bakasabl/vue-mastery/touring-vue-router/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/luciekraemer/bakasabl/vue-mastery/touring-vue-router/node_modules/@vue/cli-service/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ci5ldmVudHMgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBhbGlnbi1pdGVtczogY2VudGVyOwp9CgoucGFnaW5hdGlvbiB7CglkaXNwbGF5OiBmbGV4OwoJanVzdGlmeS1jb250ZW50OiBzcGFjZS1hcm91bmQ7Cn0KCg=="},{"version":3,"sources":["/Users/luciekraemer/bakasabl/vue-mastery/touring-vue-router/src/views/EventList.vue"],"names":[],"mappings":";AAqEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;CACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;CACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AAC9B","file":"/Users/luciekraemer/bakasabl/vue-mastery/touring-vue-router/src/views/EventList.vue","sourceRoot":"","sourcesContent":["\n<template>\n  <h1>Events for Good</h1>\n  <div class=\"events\">\n    <EventCard v-for=\"event in events\" :key=\"event.id\" :event=\"event\" />\n  </div>\n  <div class=\"pagination\">\n    <router-link\n      id=\"page-prev\"\n      :to=\"{ name: 'EventList', query: { page: page - 1 } }\"\n      rel=\"prev\"\n      v-if=\"page != 1\"\n      >&#60; Previous\n  </router-link>\n\n    <router-link\n      id=\"page-next\"\n      :to=\"{ name: 'EventList', query: { page: page + 1 } }\"\n      rel=\"next\"\n      v-if=\"hasNextPage\"\n      >Next &#62;\n    </router-link>\n</div>\n</template>\n\n<script>\nimport EventCard from '@/components/EventCard.vue'\nimport EventService from '@/services/EventService.js'\nimport { watchEffect } from 'vue'\n\nexport default {\n  name: 'EventList',\n  props: ['page'],\n  components: {\n    EventCard\n  },\n  data() {\n    return {\n      events: null,\n      totalEvents: 0 // Added this to store totalEvents\n    }\n  },\n\tcreated() {\n\t\t/* We simply allow it to wrap our API call. Now, */\n\t    watchEffect(() => {\n\t    \tthis.events = null // This is so when we load another page the current list of events is removed so the user knows that itâ€™s loading. We could also have an animated spinner if we wanted. This will clear out the events on the page, so our user knows the API has been called.\n\t      EventService.getEvents(2, this.page)\n\t        .then(response => {\n\t          this.events = response.data\n\t          this.totalEvents = response.headers['x-total-count'] // Store totalEvents\n\t        })\n\t        .catch(error => {\n\t          console.log(error)\n\t        })\n\t    })\n\t  },\n\t  computed: {\n    hasNextPage() {\n      // First, calculate total pages\n      var totalPages = Math.ceil(this.totalEvents / 2) // 2 is events per page\n\n      // Then check to see if the current page is less than the total pages.\n      return this.page < totalPages\n\t}\n  }\n}\n\n</script>\n<style scoped>\n.events {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\n.pagination {\n\tdisplay: flex;\n\tjustify-content: space-around;\n}\n\n</style>"]}]}